trigger:
  branches:
    include:
      - dev
  paths:
    include:
      - terraform/**

pr:
  branches:
    include:
      - dev
  paths:
    include:
      - terraform/**


variables:
- group: Azure

stages:
  - stage: Plan
    displayName: "Terraform plan on dev"
    jobs:
      - job: PR_Plan
        displayName: "Terraform Plan on DEV"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          # Ініціалізація Terraform
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: $(ServiceConnection)
              backendAzureRmResourceGroupName: $(backendGroup)
              backendAzureRmStorageAccountName: $(backendStorage)
              backendAzureRmContainerName: $(backendContainer)
              backendAzureRmKey: $(backendKey)
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
            displayName: "Terraform Init"

          # Вибір або створення workspace
          - script: |
              terraform workspace select dev || terraform workspace new dev
            displayName: "Select/Create Terraform Workspace"
            workingDirectory: $(System.DefaultWorkingDirectory)/terraform

          # Валідація Terraform файлів
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
            displayName: "Terraform Validate"

          # Виконання Terraform Plan
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              environmentServiceNameAzureRM: $(ServiceConnection)
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
            displayName: "Terraform Plan"
          
          # Розгортання змін
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'apply'
              environmentServiceNameAzureRM: $(ServiceConnection)
              commandOptions: '-auto-approve'
              workingDirectory: $(System.DefaultWorkingDirectory)/terraform
            displayName: "Terraform Apply"

# розкометую коли буде env
# - stage: Apply
#     displayName: "Apply Terraform"
#     dependsOn: Plan
#     condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
#     jobs:
#       - deployment: ApplyTerraform
#         displayName: "Terraform Apply"
#         environment: "dev"
#         pool:
#           vmImage: 'ubuntu-latest'
#         strategy:
#           runOnce:
#             deploy:
#               steps:
#                 # Перевірка репозиторію
#                 - checkout: self
#                   displayName: "Checkout repository"

#                 # Ініціалізація Terraform
#                 - task: TerraformTaskV4@4
#                   inputs:
#                     provider: 'azurerm'
#                     command: 'init'
#                     backendServiceArm: $(ServiceConnection)
#                     backendAzureRmResourceGroupName: $(backendGroup)
#                     backendAzureRmStorageAccountName: $(backendStorage)
#                     backendAzureRmContainerName: $(backendContainer)
#                     backendAzureRmKey: $(backendKey)
#                     workingDirectory: $(System.DefaultWorkingDirectory)/terraform
#                   displayName: "Terraform Init"
                
#                 # Вибір або створення workspace
#                 - script: |
#                     terraform workspace select dev || terraform workspace new dev
#                   displayName: "Select/Create Terraform Workspace"
#                   workingDirectory: $(System.DefaultWorkingDirectory)/terraform

#                 # Розгортання змін
#                 - task: TerraformTaskV4@4
#                   inputs:
#                     provider: 'azurerm'
#                     command: 'apply'
#                     environmentServiceNameAzureRM: $(ServiceConnection)
#                     commandOptions: '-auto-approve'
#                     workingDirectory: $(System.DefaultWorkingDirectory)/terraform
#                   displayName: "Terraform Apply"